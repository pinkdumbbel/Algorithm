//left i = left+1; i <= right+1; i++; 순회
//i를 n으로 나눈 나머지가 몫+1보다 크면 나머지 push 아니면 몫+1 push
//몫과 나머지가 0이면 1을 push;
//나머지가 0 이면 n을 push

function solution(n, left, right) {
    const answer = [];
    
    for(let i = left+1; i <= right+1; i++) {
        const q = Math.floor(i/n) //몫
        const r = i%n; //나머지
        
        if(r===0) {
            answer.push(q===0 ? 1 : n);
            continue;
        };
        
        if(r > q+1) {
            answer.push(r);
        } else {
            answer.push(q+1);
        }
    }
    return answer;
}

//2차원 배열을 사용하지 않고 해결 해보자
//1차원 배열도 안된다. 제한사항 크기만큼 배열을 만들수가 없다.
//left와 right를 통해 해결해야 한다.
//left혹은 right를 n으로 나눴을때 0이면 그냥n이다. 
//left가 n이면 1부터
//

//만약 n이 5이다 left=7(3) , right=20
//[3, 4, 5, 3, 3, 3, 4, 5, 4, 4, 4, 4, 5, 5]

/*
1/5 0...1; 1
2/5 0...2; 2
3/5 0...3; 3
4/5 0...4; 4
5/5 1...0; 5

6/5 1...1; 2
7/5 1...2; 2
8/5 1...3; 3
9/5 1...4; 4
10/5 2...0; 5

11/5 2...1; 3
12/5 2...2; 3 
13/5 2...3; 3
14/5 2...4; 4
15/5 3...0; 5

[
    [1,2,3,4,5],
    [2,2,3,4,5],
    [3,3,3,4,5],
    [4,4,4,4,5],
    [5,5,5,5,5],
]
[1,2,3,4,5,2,2,3,4,5,3,3,3,4,5,4,4,4,4,5,5,5,5,5,5]
*/